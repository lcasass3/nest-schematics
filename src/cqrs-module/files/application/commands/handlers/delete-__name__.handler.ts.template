import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';

import { I<%= classify(plural(name)) %>Repository } from '#modules/<%= dasherize(plural(name))%>/domain/repositories';
import { Delete<%= classify(name) %>Command } from '../impl';

@CommandHandler(Delete<%= classify(name) %>Command)
export class Delete<%= classify(name) %>Handler implements ICommandHandler<Delete<%= classify(name) %>Command> {
  constructor(private readonly <%= camelize(plural(name)) %>Repository: I<%= classify(plural(name)) %>Repository) {}

  async execute({ id }: Delete<%= classify(name) %>Command): Promise<void> {
    return this.<%= camelize(plural(name)) %>Repository.delete(id);
  }
}
