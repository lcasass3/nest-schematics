import { Create<%= classify(name) %>Dto, Update<%= classify(name) %>Dto } from '../dtos';
import { <%= classify(name) %> } from '../entities';

export abstract class I<%= classify(name) %>Repository {
  abstract all(): Promise<<%= classify(name) %>[]>;
  abstract findById(id: string): Promise<<%= classify(name) %> | null>;

  abstract create(<%= camelize(name) %>: Create<%= classify(name) %>Dto): Promise<<%= classify(name) %>>;
  abstract update(id: string, <%= camelize(name) %>: Update<%= classify(name) %>Dto): Promise<<%= classify(name) %>>;
  abstract delete(id: string): Promise<void>;
}
